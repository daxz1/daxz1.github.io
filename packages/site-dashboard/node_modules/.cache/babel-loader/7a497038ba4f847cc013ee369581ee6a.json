{"ast":null,"code":"import React from 'react';\nimport { mergeReactQueryConfigs } from '../core/config';\nvar configContext = /*#__PURE__*/React.createContext(undefined);\nexport function useContextConfig() {\n  return React.useContext(configContext);\n}\nexport var ReactQueryConfigProvider = function ReactQueryConfigProvider(_ref) {\n  var config = _ref.config,\n      children = _ref.children;\n  var parentConfig = useContextConfig();\n  var mergedConfig = React.useMemo(function () {\n    return parentConfig ? mergeReactQueryConfigs(parentConfig, config) : config;\n  }, [config, parentConfig]);\n  return /*#__PURE__*/React.createElement(configContext.Provider, {\n    value: mergedConfig\n  }, children);\n};","map":{"version":3,"sources":["/Users/dcheema/Projects/daxz1.github.io/node_modules/react-query/es/react/ReactQueryConfigProvider.js"],"names":["React","mergeReactQueryConfigs","configContext","createContext","undefined","useContextConfig","useContext","ReactQueryConfigProvider","_ref","config","children","parentConfig","mergedConfig","useMemo","createElement","Provider","value"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,sBAAT,QAAuC,gBAAvC;AACA,IAAIC,aAAa,GAAG,aAAaF,KAAK,CAACG,aAAN,CAAoBC,SAApB,CAAjC;AACA,OAAO,SAASC,gBAAT,GAA4B;AACjC,SAAOL,KAAK,CAACM,UAAN,CAAiBJ,aAAjB,CAAP;AACD;AACD,OAAO,IAAIK,wBAAwB,GAAG,SAASA,wBAAT,CAAkCC,IAAlC,EAAwC;AAC5E,MAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;AAAA,MACIC,QAAQ,GAAGF,IAAI,CAACE,QADpB;AAEA,MAAIC,YAAY,GAAGN,gBAAgB,EAAnC;AACA,MAAIO,YAAY,GAAGZ,KAAK,CAACa,OAAN,CAAc,YAAY;AAC3C,WAAOF,YAAY,GAAGV,sBAAsB,CAACU,YAAD,EAAeF,MAAf,CAAzB,GAAkDA,MAArE;AACD,GAFkB,EAEhB,CAACA,MAAD,EAASE,YAAT,CAFgB,CAAnB;AAGA,SAAO,aAAaX,KAAK,CAACc,aAAN,CAAoBZ,aAAa,CAACa,QAAlC,EAA4C;AAC9DC,IAAAA,KAAK,EAAEJ;AADuD,GAA5C,EAEjBF,QAFiB,CAApB;AAGD,CAVM","sourcesContent":["import React from 'react';\nimport { mergeReactQueryConfigs } from '../core/config';\nvar configContext = /*#__PURE__*/React.createContext(undefined);\nexport function useContextConfig() {\n  return React.useContext(configContext);\n}\nexport var ReactQueryConfigProvider = function ReactQueryConfigProvider(_ref) {\n  var config = _ref.config,\n      children = _ref.children;\n  var parentConfig = useContextConfig();\n  var mergedConfig = React.useMemo(function () {\n    return parentConfig ? mergeReactQueryConfigs(parentConfig, config) : config;\n  }, [config, parentConfig]);\n  return /*#__PURE__*/React.createElement(configContext.Provider, {\n    value: mergedConfig\n  }, children);\n};"]},"metadata":{},"sourceType":"module"}