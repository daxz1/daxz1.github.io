{"ast":null,"code":"import React from 'react';\nimport { QueryCache, queryCache as defaultQueryCache, queryCaches } from '../core';\nvar queryCacheContext = /*#__PURE__*/React.createContext(defaultQueryCache);\nexport var useQueryCache = function useQueryCache() {\n  return React.useContext(queryCacheContext);\n};\nexport var ReactQueryCacheProvider = function ReactQueryCacheProvider(_ref) {\n  var queryCache = _ref.queryCache,\n      children = _ref.children;\n  var resolvedQueryCache = React.useMemo(function () {\n    return queryCache || new QueryCache();\n  }, [queryCache]);\n  React.useEffect(function () {\n    queryCaches.push(resolvedQueryCache);\n    return function () {\n      // remove the cache from the active list\n      var i = queryCaches.indexOf(resolvedQueryCache);\n\n      if (i > -1) {\n        queryCaches.splice(i, 1);\n      } // if the resolvedQueryCache was created by us, we need to tear it down\n\n\n      if (queryCache == null) {\n        resolvedQueryCache.clear({\n          notify: false\n        });\n      }\n    };\n  }, [resolvedQueryCache, queryCache]);\n  return /*#__PURE__*/React.createElement(queryCacheContext.Provider, {\n    value: resolvedQueryCache\n  }, children);\n};","map":{"version":3,"sources":["/Users/dcheema/Projects/daxz1.github.io/node_modules/react-query/es/react/ReactQueryCacheProvider.js"],"names":["React","QueryCache","queryCache","defaultQueryCache","queryCaches","queryCacheContext","createContext","useQueryCache","useContext","ReactQueryCacheProvider","_ref","children","resolvedQueryCache","useMemo","useEffect","push","i","indexOf","splice","clear","notify","createElement","Provider","value"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,UAAU,IAAIC,iBAAnC,EAAsDC,WAAtD,QAAyE,SAAzE;AACA,IAAIC,iBAAiB,GAAG,aAAaL,KAAK,CAACM,aAAN,CAAoBH,iBAApB,CAArC;AACA,OAAO,IAAII,aAAa,GAAG,SAASA,aAAT,GAAyB;AAClD,SAAOP,KAAK,CAACQ,UAAN,CAAiBH,iBAAjB,CAAP;AACD,CAFM;AAGP,OAAO,IAAII,uBAAuB,GAAG,SAASA,uBAAT,CAAiCC,IAAjC,EAAuC;AAC1E,MAAIR,UAAU,GAAGQ,IAAI,CAACR,UAAtB;AAAA,MACIS,QAAQ,GAAGD,IAAI,CAACC,QADpB;AAEA,MAAIC,kBAAkB,GAAGZ,KAAK,CAACa,OAAN,CAAc,YAAY;AACjD,WAAOX,UAAU,IAAI,IAAID,UAAJ,EAArB;AACD,GAFwB,EAEtB,CAACC,UAAD,CAFsB,CAAzB;AAGAF,EAAAA,KAAK,CAACc,SAAN,CAAgB,YAAY;AAC1BV,IAAAA,WAAW,CAACW,IAAZ,CAAiBH,kBAAjB;AACA,WAAO,YAAY;AACjB;AACA,UAAII,CAAC,GAAGZ,WAAW,CAACa,OAAZ,CAAoBL,kBAApB,CAAR;;AAEA,UAAII,CAAC,GAAG,CAAC,CAAT,EAAY;AACVZ,QAAAA,WAAW,CAACc,MAAZ,CAAmBF,CAAnB,EAAsB,CAAtB;AACD,OANgB,CAMf;;;AAGF,UAAId,UAAU,IAAI,IAAlB,EAAwB;AACtBU,QAAAA,kBAAkB,CAACO,KAAnB,CAAyB;AACvBC,UAAAA,MAAM,EAAE;AADe,SAAzB;AAGD;AACF,KAdD;AAeD,GAjBD,EAiBG,CAACR,kBAAD,EAAqBV,UAArB,CAjBH;AAkBA,SAAO,aAAaF,KAAK,CAACqB,aAAN,CAAoBhB,iBAAiB,CAACiB,QAAtC,EAAgD;AAClEC,IAAAA,KAAK,EAAEX;AAD2D,GAAhD,EAEjBD,QAFiB,CAApB;AAGD,CA3BM","sourcesContent":["import React from 'react';\nimport { QueryCache, queryCache as defaultQueryCache, queryCaches } from '../core';\nvar queryCacheContext = /*#__PURE__*/React.createContext(defaultQueryCache);\nexport var useQueryCache = function useQueryCache() {\n  return React.useContext(queryCacheContext);\n};\nexport var ReactQueryCacheProvider = function ReactQueryCacheProvider(_ref) {\n  var queryCache = _ref.queryCache,\n      children = _ref.children;\n  var resolvedQueryCache = React.useMemo(function () {\n    return queryCache || new QueryCache();\n  }, [queryCache]);\n  React.useEffect(function () {\n    queryCaches.push(resolvedQueryCache);\n    return function () {\n      // remove the cache from the active list\n      var i = queryCaches.indexOf(resolvedQueryCache);\n\n      if (i > -1) {\n        queryCaches.splice(i, 1);\n      } // if the resolvedQueryCache was created by us, we need to tear it down\n\n\n      if (queryCache == null) {\n        resolvedQueryCache.clear({\n          notify: false\n        });\n      }\n    };\n  }, [resolvedQueryCache, queryCache]);\n  return /*#__PURE__*/React.createElement(queryCacheContext.Provider, {\n    value: resolvedQueryCache\n  }, children);\n};"]},"metadata":{},"sourceType":"module"}