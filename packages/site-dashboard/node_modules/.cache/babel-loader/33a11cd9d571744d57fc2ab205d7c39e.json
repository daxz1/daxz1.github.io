{"ast":null,"code":"import { getBatchedUpdates, scheduleMicrotask } from './utils'; // TYPES\n// CLASS\n\nexport var NotifyManager = /*#__PURE__*/function () {\n  function NotifyManager() {\n    this.queue = [];\n    this.transactions = 0;\n  }\n\n  var _proto = NotifyManager.prototype;\n\n  _proto.batch = function batch(callback) {\n    this.transactions++;\n    var result = callback();\n    this.transactions--;\n\n    if (!this.transactions) {\n      this.flush();\n    }\n\n    return result;\n  };\n\n  _proto.schedule = function schedule(notify) {\n    if (this.transactions) {\n      this.queue.push(notify);\n    } else {\n      scheduleMicrotask(function () {\n        notify();\n      });\n    }\n  };\n\n  _proto.flush = function flush() {\n    var queue = this.queue;\n    this.queue = [];\n\n    if (queue.length) {\n      scheduleMicrotask(function () {\n        var batchedUpdates = getBatchedUpdates();\n        batchedUpdates(function () {\n          queue.forEach(function (notify) {\n            notify();\n          });\n        });\n      });\n    }\n  };\n\n  return NotifyManager;\n}(); // SINGLETON\n\nexport var notifyManager = new NotifyManager();","map":{"version":3,"sources":["/Users/dcheema/Projects/daxz1.github.io/node_modules/react-query/es/core/notifyManager.js"],"names":["getBatchedUpdates","scheduleMicrotask","NotifyManager","queue","transactions","_proto","prototype","batch","callback","result","flush","schedule","notify","push","length","batchedUpdates","forEach","notifyManager"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,iBAA5B,QAAqD,SAArD,C,CAAgE;AAEhE;;AACA,OAAO,IAAIC,aAAa,GAAG,aAAa,YAAY;AAClD,WAASA,aAAT,GAAyB;AACvB,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,YAAL,GAAoB,CAApB;AACD;;AAED,MAAIC,MAAM,GAAGH,aAAa,CAACI,SAA3B;;AAEAD,EAAAA,MAAM,CAACE,KAAP,GAAe,SAASA,KAAT,CAAeC,QAAf,EAAyB;AACtC,SAAKJ,YAAL;AACA,QAAIK,MAAM,GAAGD,QAAQ,EAArB;AACA,SAAKJ,YAAL;;AAEA,QAAI,CAAC,KAAKA,YAAV,EAAwB;AACtB,WAAKM,KAAL;AACD;;AAED,WAAOD,MAAP;AACD,GAVD;;AAYAJ,EAAAA,MAAM,CAACM,QAAP,GAAkB,SAASA,QAAT,CAAkBC,MAAlB,EAA0B;AAC1C,QAAI,KAAKR,YAAT,EAAuB;AACrB,WAAKD,KAAL,CAAWU,IAAX,CAAgBD,MAAhB;AACD,KAFD,MAEO;AACLX,MAAAA,iBAAiB,CAAC,YAAY;AAC5BW,QAAAA,MAAM;AACP,OAFgB,CAAjB;AAGD;AACF,GARD;;AAUAP,EAAAA,MAAM,CAACK,KAAP,GAAe,SAASA,KAAT,GAAiB;AAC9B,QAAIP,KAAK,GAAG,KAAKA,KAAjB;AACA,SAAKA,KAAL,GAAa,EAAb;;AAEA,QAAIA,KAAK,CAACW,MAAV,EAAkB;AAChBb,MAAAA,iBAAiB,CAAC,YAAY;AAC5B,YAAIc,cAAc,GAAGf,iBAAiB,EAAtC;AACAe,QAAAA,cAAc,CAAC,YAAY;AACzBZ,UAAAA,KAAK,CAACa,OAAN,CAAc,UAAUJ,MAAV,EAAkB;AAC9BA,YAAAA,MAAM;AACP,WAFD;AAGD,SAJa,CAAd;AAKD,OAPgB,CAAjB;AAQD;AACF,GAdD;;AAgBA,SAAOV,aAAP;AACD,CA/CuC,EAAjC,C,CA+CF;;AAEL,OAAO,IAAIe,aAAa,GAAG,IAAIf,aAAJ,EAApB","sourcesContent":["import { getBatchedUpdates, scheduleMicrotask } from './utils'; // TYPES\n\n// CLASS\nexport var NotifyManager = /*#__PURE__*/function () {\n  function NotifyManager() {\n    this.queue = [];\n    this.transactions = 0;\n  }\n\n  var _proto = NotifyManager.prototype;\n\n  _proto.batch = function batch(callback) {\n    this.transactions++;\n    var result = callback();\n    this.transactions--;\n\n    if (!this.transactions) {\n      this.flush();\n    }\n\n    return result;\n  };\n\n  _proto.schedule = function schedule(notify) {\n    if (this.transactions) {\n      this.queue.push(notify);\n    } else {\n      scheduleMicrotask(function () {\n        notify();\n      });\n    }\n  };\n\n  _proto.flush = function flush() {\n    var queue = this.queue;\n    this.queue = [];\n\n    if (queue.length) {\n      scheduleMicrotask(function () {\n        var batchedUpdates = getBatchedUpdates();\n        batchedUpdates(function () {\n          queue.forEach(function (notify) {\n            notify();\n          });\n        });\n      });\n    }\n  };\n\n  return NotifyManager;\n}(); // SINGLETON\n\nexport var notifyManager = new NotifyManager();"]},"metadata":{},"sourceType":"module"}