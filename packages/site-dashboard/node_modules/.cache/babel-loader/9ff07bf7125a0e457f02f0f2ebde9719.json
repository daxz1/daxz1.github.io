{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { useMountedCallback } from './utils';\nimport { getResolvedMutationConfig } from '../core/config';\nimport { Console, uid, getStatusProps } from '../core/utils';\nimport { QueryStatus } from '../core/types';\nimport { useQueryCache } from './ReactQueryCacheProvider';\nimport { useContextConfig } from './ReactQueryConfigProvider'; // TYPES\n\nfunction _await(value, then, direct) {\n  if (direct) {\n    return then ? then(value) : value;\n  }\n\n  if (!value || !value.then) {\n    value = Promise.resolve(value);\n  }\n\n  return then ? value.then(then) : value;\n}\n\nvar ActionType = {\n  Reset: 0,\n  Loading: 1,\n  Resolve: 2,\n  Reject: 3\n}; // HOOK\n\nfunction _catch(body, recover) {\n  try {\n    var result = body();\n  } catch (e) {\n    return recover(e);\n  }\n\n  if (result && result.then) {\n    return result.then(void 0, recover);\n  }\n\n  return result;\n}\n\nfunction _async(f) {\n  return function () {\n    for (var args = [], i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    try {\n      return Promise.resolve(f.apply(this, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\nfunction getDefaultState() {\n  return _extends({}, getStatusProps(QueryStatus.Idle), {\n    data: undefined,\n    error: null\n  });\n}\n\nfunction mutationReducer(state, action) {\n  switch (action.type) {\n    case ActionType.Reset:\n      return getDefaultState();\n\n    case ActionType.Loading:\n      return _extends({}, getStatusProps(QueryStatus.Loading), {\n        data: undefined,\n        error: null\n      });\n\n    case ActionType.Resolve:\n      return _extends({}, getStatusProps(QueryStatus.Success), {\n        data: action.data,\n        error: null\n      });\n\n    case ActionType.Reject:\n      return _extends({}, getStatusProps(QueryStatus.Error), {\n        data: undefined,\n        error: action.error\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport function useMutation(mutationFn, config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var cache = useQueryCache();\n  var contextConfig = useContextConfig(); // Get resolved config\n\n  var resolvedConfig = getResolvedMutationConfig(cache, contextConfig, config);\n\n  var _React$useReducer = React.useReducer(mutationReducer, null, getDefaultState),\n      state = _React$useReducer[0],\n      unsafeDispatch = _React$useReducer[1];\n\n  var dispatch = useMountedCallback(unsafeDispatch);\n  var latestMutationRef = React.useRef();\n  var latestMutationFnRef = React.useRef(mutationFn);\n  latestMutationFnRef.current = mutationFn;\n  var latestConfigRef = React.useRef(resolvedConfig);\n  latestConfigRef.current = resolvedConfig;\n  var mutate = React.useCallback(_async(function (variables, mutateConfig) {\n    if (mutateConfig === void 0) {\n      mutateConfig = {};\n    }\n\n    var latestConfig = latestConfigRef.current;\n    var mutationId = uid();\n    latestMutationRef.current = mutationId;\n\n    var isLatest = function isLatest() {\n      return latestMutationRef.current === mutationId;\n    };\n\n    var snapshotValue;\n    return _catch(function () {\n      dispatch({\n        type: ActionType.Loading\n      });\n      return _await(latestConfig.onMutate == null ? void 0 : latestConfig.onMutate(variables), function (_latestConfig$onMutat) {\n        snapshotValue = _latestConfig$onMutat;\n        var latestMutationFn = latestMutationFnRef.current;\n        return _await(latestMutationFn(variables), function (data) {\n          if (isLatest()) {\n            dispatch({\n              type: ActionType.Resolve,\n              data: data\n            });\n          }\n\n          return _await(latestConfig.onSuccess == null ? void 0 : latestConfig.onSuccess(data, variables), function () {\n            return _await(mutateConfig.onSuccess == null ? void 0 : mutateConfig.onSuccess(data, variables), function () {\n              return _await(latestConfig.onSettled == null ? void 0 : latestConfig.onSettled(data, null, variables), function () {\n                return _await(mutateConfig.onSettled == null ? void 0 : mutateConfig.onSettled(data, null, variables), function () {\n                  return data;\n                });\n              });\n            });\n          });\n        });\n      });\n    }, function (error) {\n      Console.error(error);\n      return _await(latestConfig.onError == null ? void 0 : latestConfig.onError(error, variables, snapshotValue), function () {\n        return _await(mutateConfig.onError == null ? void 0 : mutateConfig.onError(error, variables, snapshotValue), function () {\n          return _await(latestConfig.onSettled == null ? void 0 : latestConfig.onSettled(undefined, error, variables, snapshotValue), function () {\n            return _await(mutateConfig.onSettled == null ? void 0 : mutateConfig.onSettled(undefined, error, variables, snapshotValue), function () {\n              if (isLatest()) {\n                dispatch({\n                  type: ActionType.Reject,\n                  error: error\n                });\n              }\n\n              if (mutateConfig.throwOnError || latestConfig.throwOnError) {\n                throw error;\n              }\n            });\n          });\n        });\n      });\n    });\n  }), [dispatch]);\n  React.useEffect(function () {\n    var latestConfig = latestConfigRef.current;\n    var suspense = latestConfig.suspense,\n        useErrorBoundary = latestConfig.useErrorBoundary;\n\n    if ((useErrorBoundary || suspense) && state.error) {\n      throw state.error;\n    }\n  }, [state.error]);\n  var reset = React.useCallback(function () {\n    dispatch({\n      type: ActionType.Reset\n    });\n  }, [dispatch]);\n\n  var result = _extends({}, state, {\n    reset: reset\n  });\n\n  return [mutate, result];\n}","map":{"version":3,"sources":["/Users/dcheema/Projects/daxz1.github.io/node_modules/react-query/es/react/useMutation.js"],"names":["_extends","React","useMountedCallback","getResolvedMutationConfig","Console","uid","getStatusProps","QueryStatus","useQueryCache","useContextConfig","_await","value","then","direct","Promise","resolve","ActionType","Reset","Loading","Resolve","Reject","_catch","body","recover","result","e","_async","f","args","i","arguments","length","apply","reject","getDefaultState","Idle","data","undefined","error","mutationReducer","state","action","type","Success","Error","useMutation","mutationFn","config","cache","contextConfig","resolvedConfig","_React$useReducer","useReducer","unsafeDispatch","dispatch","latestMutationRef","useRef","latestMutationFnRef","current","latestConfigRef","mutate","useCallback","variables","mutateConfig","latestConfig","mutationId","isLatest","snapshotValue","onMutate","_latestConfig$onMutat","latestMutationFn","onSuccess","onSettled","onError","throwOnError","useEffect","suspense","useErrorBoundary","reset"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { useMountedCallback } from './utils';\nimport { getResolvedMutationConfig } from '../core/config';\nimport { Console, uid, getStatusProps } from '../core/utils';\nimport { QueryStatus } from '../core/types';\nimport { useQueryCache } from './ReactQueryCacheProvider';\nimport { useContextConfig } from './ReactQueryConfigProvider'; // TYPES\n\nfunction _await(value, then, direct) {\n  if (direct) {\n    return then ? then(value) : value;\n  }\n\n  if (!value || !value.then) {\n    value = Promise.resolve(value);\n  }\n\n  return then ? value.then(then) : value;\n}\n\nvar ActionType = {\n  Reset: 0,\n  Loading: 1,\n  Resolve: 2,\n  Reject: 3\n};\n\n// HOOK\nfunction _catch(body, recover) {\n  try {\n    var result = body();\n  } catch (e) {\n    return recover(e);\n  }\n\n  if (result && result.then) {\n    return result.then(void 0, recover);\n  }\n\n  return result;\n}\n\nfunction _async(f) {\n  return function () {\n    for (var args = [], i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    try {\n      return Promise.resolve(f.apply(this, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\nfunction getDefaultState() {\n  return _extends({}, getStatusProps(QueryStatus.Idle), {\n    data: undefined,\n    error: null\n  });\n}\n\nfunction mutationReducer(state, action) {\n  switch (action.type) {\n    case ActionType.Reset:\n      return getDefaultState();\n\n    case ActionType.Loading:\n      return _extends({}, getStatusProps(QueryStatus.Loading), {\n        data: undefined,\n        error: null\n      });\n\n    case ActionType.Resolve:\n      return _extends({}, getStatusProps(QueryStatus.Success), {\n        data: action.data,\n        error: null\n      });\n\n    case ActionType.Reject:\n      return _extends({}, getStatusProps(QueryStatus.Error), {\n        data: undefined,\n        error: action.error\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport function useMutation(mutationFn, config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var cache = useQueryCache();\n  var contextConfig = useContextConfig(); // Get resolved config\n\n  var resolvedConfig = getResolvedMutationConfig(cache, contextConfig, config);\n\n  var _React$useReducer = React.useReducer(mutationReducer, null, getDefaultState),\n      state = _React$useReducer[0],\n      unsafeDispatch = _React$useReducer[1];\n\n  var dispatch = useMountedCallback(unsafeDispatch);\n  var latestMutationRef = React.useRef();\n  var latestMutationFnRef = React.useRef(mutationFn);\n  latestMutationFnRef.current = mutationFn;\n  var latestConfigRef = React.useRef(resolvedConfig);\n  latestConfigRef.current = resolvedConfig;\n  var mutate = React.useCallback(_async(function (variables, mutateConfig) {\n    if (mutateConfig === void 0) {\n      mutateConfig = {};\n    }\n\n    var latestConfig = latestConfigRef.current;\n    var mutationId = uid();\n    latestMutationRef.current = mutationId;\n\n    var isLatest = function isLatest() {\n      return latestMutationRef.current === mutationId;\n    };\n\n    var snapshotValue;\n    return _catch(function () {\n      dispatch({\n        type: ActionType.Loading\n      });\n      return _await(latestConfig.onMutate == null ? void 0 : latestConfig.onMutate(variables), function (_latestConfig$onMutat) {\n        snapshotValue = _latestConfig$onMutat;\n        var latestMutationFn = latestMutationFnRef.current;\n        return _await(latestMutationFn(variables), function (data) {\n          if (isLatest()) {\n            dispatch({\n              type: ActionType.Resolve,\n              data: data\n            });\n          }\n\n          return _await(latestConfig.onSuccess == null ? void 0 : latestConfig.onSuccess(data, variables), function () {\n            return _await(mutateConfig.onSuccess == null ? void 0 : mutateConfig.onSuccess(data, variables), function () {\n              return _await(latestConfig.onSettled == null ? void 0 : latestConfig.onSettled(data, null, variables), function () {\n                return _await(mutateConfig.onSettled == null ? void 0 : mutateConfig.onSettled(data, null, variables), function () {\n                  return data;\n                });\n              });\n            });\n          });\n        });\n      });\n    }, function (error) {\n      Console.error(error);\n      return _await(latestConfig.onError == null ? void 0 : latestConfig.onError(error, variables, snapshotValue), function () {\n        return _await(mutateConfig.onError == null ? void 0 : mutateConfig.onError(error, variables, snapshotValue), function () {\n          return _await(latestConfig.onSettled == null ? void 0 : latestConfig.onSettled(undefined, error, variables, snapshotValue), function () {\n            return _await(mutateConfig.onSettled == null ? void 0 : mutateConfig.onSettled(undefined, error, variables, snapshotValue), function () {\n              if (isLatest()) {\n                dispatch({\n                  type: ActionType.Reject,\n                  error: error\n                });\n              }\n\n              if (mutateConfig.throwOnError || latestConfig.throwOnError) {\n                throw error;\n              }\n            });\n          });\n        });\n      });\n    });\n  }), [dispatch]);\n  React.useEffect(function () {\n    var latestConfig = latestConfigRef.current;\n    var suspense = latestConfig.suspense,\n        useErrorBoundary = latestConfig.useErrorBoundary;\n\n    if ((useErrorBoundary || suspense) && state.error) {\n      throw state.error;\n    }\n  }, [state.error]);\n  var reset = React.useCallback(function () {\n    dispatch({\n      type: ActionType.Reset\n    });\n  }, [dispatch]);\n\n  var result = _extends({}, state, {\n    reset: reset\n  });\n\n  return [mutate, result];\n}"]},"metadata":{},"sourceType":"module"}