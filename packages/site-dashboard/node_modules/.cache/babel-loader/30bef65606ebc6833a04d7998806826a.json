{"ast":null,"code":"import React from 'react';\nimport { useQueryCache } from './ReactQueryCacheProvider';\nimport { useIsMounted } from './utils';\nexport function useIsFetching() {\n  var isMounted = useIsMounted();\n  var queryCache = useQueryCache();\n\n  var _React$useState = React.useState(queryCache.isFetching),\n      isFetching = _React$useState[0],\n      setIsFetching = _React$useState[1];\n\n  React.useEffect(function () {\n    return queryCache.subscribe(function () {\n      if (isMounted()) {\n        setIsFetching(queryCache.isFetching);\n      }\n    });\n  }, [queryCache, setIsFetching, isMounted]);\n  return isFetching;\n}","map":{"version":3,"sources":["/Users/dcheema/Projects/daxz1.github.io/node_modules/react-query/es/react/useIsFetching.js"],"names":["React","useQueryCache","useIsMounted","useIsFetching","isMounted","queryCache","_React$useState","useState","isFetching","setIsFetching","useEffect","subscribe"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,OAAO,SAASC,aAAT,GAAyB;AAC9B,MAAIC,SAAS,GAAGF,YAAY,EAA5B;AACA,MAAIG,UAAU,GAAGJ,aAAa,EAA9B;;AAEA,MAAIK,eAAe,GAAGN,KAAK,CAACO,QAAN,CAAeF,UAAU,CAACG,UAA1B,CAAtB;AAAA,MACIA,UAAU,GAAGF,eAAe,CAAC,CAAD,CADhC;AAAA,MAEIG,aAAa,GAAGH,eAAe,CAAC,CAAD,CAFnC;;AAIAN,EAAAA,KAAK,CAACU,SAAN,CAAgB,YAAY;AAC1B,WAAOL,UAAU,CAACM,SAAX,CAAqB,YAAY;AACtC,UAAIP,SAAS,EAAb,EAAiB;AACfK,QAAAA,aAAa,CAACJ,UAAU,CAACG,UAAZ,CAAb;AACD;AACF,KAJM,CAAP;AAKD,GAND,EAMG,CAACH,UAAD,EAAaI,aAAb,EAA4BL,SAA5B,CANH;AAOA,SAAOI,UAAP;AACD","sourcesContent":["import React from 'react';\nimport { useQueryCache } from './ReactQueryCacheProvider';\nimport { useIsMounted } from './utils';\nexport function useIsFetching() {\n  var isMounted = useIsMounted();\n  var queryCache = useQueryCache();\n\n  var _React$useState = React.useState(queryCache.isFetching),\n      isFetching = _React$useState[0],\n      setIsFetching = _React$useState[1];\n\n  React.useEffect(function () {\n    return queryCache.subscribe(function () {\n      if (isMounted()) {\n        setIsFetching(queryCache.isFetching);\n      }\n    });\n  }, [queryCache, setIsFetching, isMounted]);\n  return isFetching;\n}"]},"metadata":{},"sourceType":"module"}