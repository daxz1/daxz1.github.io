{"ast":null,"code":"import React from 'react';\nimport { isServer } from '../core/utils';\nexport function useIsMounted() {\n  var mountedRef = React.useRef(false);\n  var isMounted = React.useCallback(function () {\n    return mountedRef.current;\n  }, []);\n  React[isServer ? 'useEffect' : 'useLayoutEffect'](function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []);\n  return isMounted;\n}\nexport function useMountedCallback(callback) {\n  var isMounted = useIsMounted();\n  return React.useCallback(function () {\n    if (isMounted()) {\n      return callback.apply(void 0, arguments);\n    }\n  }, [callback, isMounted]);\n}","map":{"version":3,"sources":["/Users/dcheema/Projects/daxz1.github.io/node_modules/react-query/es/react/utils.js"],"names":["React","isServer","useIsMounted","mountedRef","useRef","isMounted","useCallback","current","useMountedCallback","callback","apply","arguments"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAO,SAASC,YAAT,GAAwB;AAC7B,MAAIC,UAAU,GAAGH,KAAK,CAACI,MAAN,CAAa,KAAb,CAAjB;AACA,MAAIC,SAAS,GAAGL,KAAK,CAACM,WAAN,CAAkB,YAAY;AAC5C,WAAOH,UAAU,CAACI,OAAlB;AACD,GAFe,EAEb,EAFa,CAAhB;AAGAP,EAAAA,KAAK,CAACC,QAAQ,GAAG,WAAH,GAAiB,iBAA1B,CAAL,CAAkD,YAAY;AAC5DE,IAAAA,UAAU,CAACI,OAAX,GAAqB,IAArB;AACA,WAAO,YAAY;AACjBJ,MAAAA,UAAU,CAACI,OAAX,GAAqB,KAArB;AACD,KAFD;AAGD,GALD,EAKG,EALH;AAMA,SAAOF,SAAP;AACD;AACD,OAAO,SAASG,kBAAT,CAA4BC,QAA5B,EAAsC;AAC3C,MAAIJ,SAAS,GAAGH,YAAY,EAA5B;AACA,SAAOF,KAAK,CAACM,WAAN,CAAkB,YAAY;AACnC,QAAID,SAAS,EAAb,EAAiB;AACf,aAAOI,QAAQ,CAACC,KAAT,CAAe,KAAK,CAApB,EAAuBC,SAAvB,CAAP;AACD;AACF,GAJM,EAIJ,CAACF,QAAD,EAAWJ,SAAX,CAJI,CAAP;AAKD","sourcesContent":["import React from 'react';\nimport { isServer } from '../core/utils';\nexport function useIsMounted() {\n  var mountedRef = React.useRef(false);\n  var isMounted = React.useCallback(function () {\n    return mountedRef.current;\n  }, []);\n  React[isServer ? 'useEffect' : 'useLayoutEffect'](function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []);\n  return isMounted;\n}\nexport function useMountedCallback(callback) {\n  var isMounted = useIsMounted();\n  return React.useCallback(function () {\n    if (isMounted()) {\n      return callback.apply(void 0, arguments);\n    }\n  }, [callback, isMounted]);\n}"]},"metadata":{},"sourceType":"module"}